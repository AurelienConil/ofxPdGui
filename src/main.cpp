/**
 * @file main.cpp
 * @brief Point d'entrÃ©e principal de l'application ofxPdGui
 * 
 * APPLICATION ofxPdGui - VISUALISATEUR PURE DATA AUTONOME
 * ========================================================
 * 
 * OBJECTIF GLOBAL :
 * CrÃ©er une application autonome capable de lire et afficher des patches Pure Data
 * sans dÃ©pendre du logiciel Pure Data lui-mÃªme. Cette application reconstruit
 * visuellement l'interface graphique des patches .pd avec une fidÃ©litÃ© maximale.
 * 
 * ARCHITECTURE COMPLÃˆTE :
 * 
 * 1. **PARSER/DECODER** (PatchParser + classes associÃ©es)
 *    â””â”€ Analyse des fichiers .pd pour extraire la structure GUI
 *    â””â”€ Conversion syntaxe Pure Data â†’ objets C++ utilisables  
 *    â””â”€ Support : bang, toggle, canvas, number, slider
 * 
 * 2. **RENDERER** (ofApp + classes GUI + PdGuiObject)
 *    â””â”€ RecrÃ©ation visuelle fidÃ¨le des objets GUI Pure Data
 *    â””â”€ Gestion des Ã©vÃ©nements souris/clavier
 *    â””â”€ SystÃ¨me d'optimisation FBO pour les performances
 *    â””â”€ Architecture de callbacks prÃªte pour ofxPd
 * 
 * Ã‰TAT ACTUEL (2025) :
 * âœ… Objets GUI implÃ©mentÃ©s : bang, toggle, canvas, number, slider
 * âœ… Parser complet pour fichiers .pd
 * âœ… SystÃ¨me de rendu optimisÃ© avec FBO
 * âœ… Architecture de callbacks prÃ©parÃ©e pour ofxPd
 * âœ… Gestion complÃ¨te des Ã©vÃ©nements utilisateur
 * 
 * ROADMAP FUTURE :
 * ðŸ”„ IntÃ©gration complÃ¨te avec ofxPd pour l'audio
 * ðŸ”„ Support des sous-patches (subpatches)  
 * ðŸ”„ Support des externals avec interface GUI
 * ðŸ”„ SystÃ¨me de sauvegarde des Ã©tats
 * ðŸ”„ Mode plein Ã©cran et multi-monitor
 * 
 * UTILISATION :
 * 1. Place ton fichier .pd dans bin/data/
 * 2. Modifie le nom dans ofApp::setup() si nÃ©cessaire
 * 3. Lance l'application pour visualiser ton patch
 * 
 * @author AurÃ©lien Conil
 * @date 2025
 */

#include "ofMain.h"
#include "ofApp.h"

//========================================================================
/// Point d'entrÃ©e principal - Configuration de la fenÃªtre et lancement
int main( ){

	// === CONFIGURATION DE LA FENÃŠTRE ===
	// Utilise ofGLFWWindowSettings pour des options avancÃ©es (multi-monitor, etc.)
	ofGLWindowSettings settings;
	settings.setSize(1024, 768);        // Taille adaptÃ©e pour les patches Pure Data
	settings.windowMode = OF_WINDOW;    // Mode fenÃªtrÃ© (peut Ãªtre OF_FULLSCREEN)

	// === CRÃ‰ATION ET LANCEMENT ===
	auto window = ofCreateWindow(settings);
	
	// Lance l'application avec notre classe principale ofApp
	ofRunApp(window, make_shared<ofApp>());
	ofRunMainLoop();

}
